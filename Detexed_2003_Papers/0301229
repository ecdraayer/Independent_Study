
black 
black 
black 






(-2.5,-2.5)(2.5,2.5)

[linecolor=,linewidth=1pt](0,0)2 

linecolor=,linewidth=2pt 
(1.532088886,1.285575219)(-1,1.732050807)
dotsize=3pt 0 
(2,0)(1.532088886,1.285575219)(.3472963546,1.969615506)(-1,1.732050807)(-1.879385242,.6840402852)(-1.879385242,-.6840402866)(-1,-1.732050807)(.3472963600,-1.969615505)(1.532088888,-1.285575217)
linecolor=black,linewidth=1pt 
(1.532088886,1.285575219)(0,0)
(-1,1.732050807)(0,0)
(0,0)1 40 120 
[linestyle=dashed](0,0)(.2660444426,1.508813014)
[linestyle=dashed](0,0)(2,0)
[linestyle=dashed](0,0)0.7 0 80 
(0.7,-0.6) 
[linewidth=0.5pt](0.5,0.15)(0.6,-0.3)
(-1,0.3) 
[linewidth=0.5pt](-0.6,0.3)(-0.1,0.7)
 




(-6,-2.5)(6,2.5)
(-3.5,0)
[linecolor=,linewidth=1pt](0,0)2 

linecolor=,linewidth=2pt 
(2,0)(.3472963546,1.969615506)
(1.532088886,1.285575219)(-1,1.732050807) 

(3.5,0)
[linecolor=,linewidth=1pt](0,0)2 

linecolor=,linewidth=2pt 
(2,0)(-1,1.732050807)
(1.532088886,1.285575219)(.3472963546,1.969615506)
 
[linewidth=1.5pt,linecolor=]-> (-0.8,0)(0.8,0)
 




(-2.5,-2.5)(2.5,2.5)

[linecolor=,linewidth=1pt](0,0)2 

linecolor=,linewidth=2pt 
[linewidth=1pt,fillstyle=hlines,hatchsep=1pt](0,0).5 
dotsize=3pt 0 
(2,0)(1.532088886,1.285575219)(.3472963546,1.969615506)(-1,1.732050807)(-1.879385242,.6840402852)(-1.879385242,-.6840402866)(-1,-1.732050807)(.3472963600,-1.969615505)(1.532088888,-1.285575217)
linecolor=black,linewidth=1pt 










 




(-6,-2.5)(6,2.5)
(-3.5,0)
[linecolor=,linewidth=1pt](0,0)2 

linecolor=,linewidth=2pt 
dotsize=5pt 0 
(0,0.1)(0,-0.1) 

(3.5,0)
[linecolor=,linewidth=1pt](0,0)2 

linecolor=,linewidth=2pt 
[linewidth=1pt,fillstyle=hlines,hatchsep=1pt](0,0).5  
[linewidth=1.5pt,linecolor=]-> (-0.8,0)(0.8,0)
 





(-6,-2.5)(6,2.5)
(-3.5,0)
[linecolor=,linewidth=1pt](0,0)2 

linecolor=,linewidth=2pt 
dotsize=5pt 0 
(2,0)(1.532088886,1.285575219)(.3472963546,1.969615506)(-1,1.732050807) 

(3.5,0)
[linecolor=,linewidth=1pt](0,0)2 

linecolor=,linewidth=2pt 
(2,0)(-1,1.732050807) 
[linewidth=1.5pt,linecolor=]-> (-0.8,0)(0.8,0)
 





(-6.7,-2)(6.7,2)


linecolor= 
(-6.5,-1.5)(-1,-1.5)
(0.5,-1.5)(5.5,-1.5)
(-6.5,1.5)(-1,1.5)
(0.5,1.5)(5.5,1.5)
(-6.5,1.5)(-6.5,-1.5)
linestyle=dashed 
(5.5,-1.5)(7,-1.5)
(-1,-1.5)(0.5,-1.5)
(5.5,1.5)(7,1.5)
(-1,1.5)(0.5,1.5)
linestyle=solid 
[linestyle=dashed](0,0)1.5 270 90 (0,0)1.5 90 270   
(-4.2625,0) 
(-2.025,0) 
(1,0) 
(5,0) 
-> (-7.3,-2.1)(-7.3,1.3)
-> (-7.3,-2.1)(7.3,-2.1)
-> (-7.3,-2.1)(-6.7,-1.6)
(-7.5,1.2) 
(7,-1.9) 
(-6.95,-1.5) 



linecolor=,hatchcolor= 
*(-6.5,1.5)0.1 
*(-4,-1.5)0.1 
*(-1.5,1.5)0.1 
(-2.025,0)
[linewidth=2pt](-1.469693846,0.3)(1.299038106,0.75)  
(-4.2625,0)
[linewidth=2pt](-.9508659879,-1.160109423)(1.269321525,-.7992639520)  
(1,0)[hatchsep=1pt,fillstyle=hlines](.2939387692,-0.3)(-.2598076212,-0.75)(3.740192378,-0.75)(4.293938770,-0.3)  


(-6.5,1.8) 
(-4,-1.8) 
(-3.3,-0.8)  
(-1.5,1.8) 
(-1.1,0.6) 


(3,0) 
<-> (5.5,-1.5)(5.5,-0.525)
(6.1,-1) 
 





(-5,-2)(5,2)
[linestyle=dashed](0,0).8 270 90 [linestyle=dashed](0,0).8 90 270   
linecolor= 
(-5,.8)(-5,-.8)(5,-.8)(5,.8)(-5,.8)

linewidth=2pt,linecolor= 
-> (0,0)(4.5,0)
-> (0,0)(-4.5,0)
 





(-6.7,-2.5)(6.7,2.5)
 
[linestyle=dashed](0,0).8 270 90 [linestyle=dashed](0,0).8 90 270   
[hatchsep=1pt,fillstyle=hlines,hatchcolor=](1,-0.5)(3.5,-0.5)(3.9,-0.125)(1.4,-0.125) 

(-6.5,0)linecolor= (0,.8)(5,.8)(0,-.8)(5,-.8)(0,.8)(0,-.8)(5,0) 
linecolor=  

[linewidth=1.5pt,linecolor=]-> (-0.8,0.4)(0.8,0.7)
[linewidth=1.5pt,linecolor=]-> (-0.8,-0.4)(0.8,-0.7)

(1.5,1.2)linecolor= (0,.8)(5,.8)(0,-.8)(5,-.8)(0,-.8)(0,.8)(5,0) linecolor= *(0.9,-.8)0.07 *(2.45,-.8)0.07 *(4,-.8)0.07  

(1.5,-1.2)linecolor= (0,.8)(5,.8)(0,-.8)(5,-.8)(0,-.8)(0,.8)(5,0) linecolor= *(1.675,.8)0.07 *(3.225,.8)0.07  
 





(-6.7,-2.5)(6.7,2.5)
 
[linestyle=dashed](0,0).8 270 90 [linestyle=dashed](0,0).8 90 270   
[hatchsep=1pt,fillstyle=hlines,hatchcolor=](2.3,0.125)(4.82,0.125)(5.125,0.411175)(2.605,0.411175) 
[hatchsep=1pt,fillstyle=vlines,hatchcolor=](3.65,0.125)(4.82,0.125)(5.125,0.411175)(3.955,0.411175) 


(-6.5,0)linecolor= (0,.8)(5,.8)(0,-.8)(5,-.8)(0,.8)(0,-.8)(5,0) 
linecolor=  

[linewidth=1.5pt,linecolor=]-> (-0.8,0.4)(0.8,0.7)
[linewidth=1.5pt,linecolor=]-> (-0.8,-0.4)(0.8,-0.7)

(1.5,1.2)linecolor= (0,.8)(5,.8)(0,-.8)(5,-.8)(0,-.8)(0,.8)(5,0) linecolor= *(1.9,.8)0.07 *(3.45,.87)0.07 *(3.45,.73)0.07 *(4.93,.73)0.07 *(4.93,.87)0.07 *(5.07,.73)0.07 *(5.07,.87)0.07 (4.97,1.05)+ - 
 

(1.5,-1.2)linecolor= (0,.8)(5,.8)(0,-.8)(5,-.8)(0,-.8)(0,.8)(5,0) linecolor= *(2.675,-.8)0.07 *(4.225,-.73)0.07 *(4.225,-.87)0.07  
 




(-6.7,-2.5)(6.7,2.5)
 
[linestyle=dashed](0,0).8 270 90 [linestyle=dashed](0,0).8 90 270   
[hatchsep=1pt,fillstyle=hlines,hatchcolor=](3.65,0.125)(4.82,0.125)(5.125,0.411175)(3.955,0.411175) 
[hatchsep=1pt,fillstyle=vlines,hatchcolor=](3.65,0.125)(4.82,0.125)(5.125,0.411175)(3.955,0.411175) 


(-6.5,0)linecolor= (0,.8)(5,.8)(0,-.8)(5,-.8)(0,.8)(0,-.8)(5,0) 
linecolor= (3.5,.3)+  

[linewidth=1.5pt,linecolor=]-> (-0.8,0.4)(0.8,0.7)
[linewidth=1.5pt,linecolor=]-> (-0.8,-0.4)(0.8,-0.7)

(1.5,1.2)linecolor= (0,.8)(5,.8)(0,-.8)(5,-.8)(0,-.8)(0,.8)(5,0) linecolor= *(3.45,.8)0.07 *(5,.8)0.07 (5,1.05)- 
 

(1.5,-1.2)linecolor= (0,.8)(5,.8)(0,-.8)(5,-.8)(0,-.8)(0,.8)(5,0) linecolor= *(4.225,-.8)0.07  
 




(-5,-2)(5,2)
[linestyle=dashed](0,0).8 270 90 [linestyle=dashed](0,0).8 90 270   
linecolor= 
(-5,.8)(-5,-.8)(5,-.8)(5,.8)(-5,.8)
*(0,0)0.1 
linewidth=2pt,linecolor= 
-> (0,0)(4.5,.72)
-> (0,0)(-4.5,-.72)
-> (0,0)(4.5,-.72)
-> (0,0)(-4.5,.72)
 




(-6.7,-2.5)(6.7,2.5)
 
[linestyle=dashed](0,0).8 270 90 [linestyle=dashed](0,0).8 90 270   
[hatchsep=1pt,fillstyle=hlines,hatchcolor=](1.9125,0.125)(4.82,0.125)(5.125,0.411175)(2.2175,0.411175) 
[hatchsep=1pt,fillstyle=vlines,hatchcolor=](4.075,-.411175)(4.82,-0.411175)(5.125,-0.125)(4.3775,-0.125) 


(-6.5,0)linecolor= (0,.8)(5,.8)(0,-.8)(5,-.8)(0,.8)(0,-.8)(5,0) 
linecolor=  

[linewidth=1.5pt,linecolor=]-> (-0.8,0.4)(0.8,0.7)
[linewidth=1.5pt,linecolor=]-> (-0.8,-0.4)(0.8,-0.7)

(1.5,1.2)linecolor= (0,.8)(5,.8)(0,-.8)(5,-.8)(0,-.8)(0,.8)(5,0) linecolor= *(1.5125,.8)0.07 *(3.0625,.8)0.07 *(4.6125,.8)0.07 *(3.8375,-.8)0.07 
 

(1.5,-1.2)linecolor= (0,.8)(5,.8)(0,-.8)(5,-.8)(0,-.8)(0,.8)(5,0) linecolor= *(2.2875,-.8)0.07 *(3.8375,-.8)0.07 *(4.6125,.8)0.07  
 




(-6.7,-1.2)(6.7,1.2)
 
[linestyle=dashed](0,0).8 270 90 [linestyle=dashed](0,0).8 90 270   
[hatchsep=1pt,fillstyle=hlines,hatchcolor=](1.7524509,-.1475491)(4.84274,-.1475491)(5.157255,0.1475491)(2.0475491,0.1475491) 
[hatchsep=1pt,fillstyle=vlines,hatchcolor=](1.7524509,-.1475491)(4.84274,-.1475491)(5.157255,0.1475491)(2.0475491,0.1475491) 


(-6.5,0)linecolor= (0,.8)(5,.8)(0,-.8)(5,-.8)(0,.8)(0,-.8)(5,0) 
linecolor= (1.6,-.1)
  


[linewidth=1.5pt,linecolor=]-> (-0.8,0)(0.8,0)

(1.5,0)linecolor= (0,.8)(5,.8)(0,-.8)(5,-.8)(0,-.8)(0,.8)(5,0) linecolor= *(1.5125,.8)0.07 *(3.0625,.8)0.07 *(4.6125,.8)0.07 *(3.8375,-.8)0.07 *(2.2875,-.8)0.07 
 
 





(-1,-1.5)(3,1.5)
linecolor= (2,1)(0,1)(0,-1)(2,-1)linecolor= *(0,1)0.1 *(2,-1)0.1 (1,0.35)
[linewidth=2pt](.9797958973,-0.2)(-.8660254040,-0.5)  linecolor= -> (1.1,-0.1)(1.9,-0.85)-> (0.9,0.1)(0.1,0.85)

 





(-6.7,-3.6)(6.7,3.6)
[linestyle=dashed](0,0)1.3 270 90 (0,0)1.3 90 270   
[hatchsep=1pt,fillstyle=hlines,hatchcolor=](0.7,-0.8)(3.8,-0.8)(4.3,-0.2)(1.2,-0.2) 

(-6.5,0)linecolor= (0,1.3)(5,1.3)(0,-1.3)(5,-1.3)(5,0) 
linecolor=  

[linewidth=1.5pt,linecolor=]-> (-0.8,0.5)(0.8,1.5)
[linewidth=1.5pt,linecolor=]-> (-0.8,-0.5)(0.8,-1.5)

(1.5,2)linecolor= (0,1.3)(5,1.3)(0,-1.3)(5,-1.3)(5,0) linecolor= *(1.175,-1.3)0.1 *(2.725,-1.3)0.1 *(4.275,-1.3)0.1  

(1.5,-2)linecolor= (0,1.3)(5,1.3)(0,-1.3)(5,-1.3)(5,0) linecolor= *(0.4,1.3)0.1 *(1.95,1.3)0.1 *(3.5,1.3)0.1  
 




(-6.7,-3.6)(6.7,3.6)
[linestyle=dashed](0,0)1.3 270 90 (0,0)1.3 90 270   
[hatchsep=1pt,fillstyle=hlines,hatchcolor=](0.925,-0.8)(3.8,-0.8)(4.3,-0.2)(1.425,-0.2) 

(-6.5,0)linecolor= (0,1.3)(5,1.3)(0,-1.3)(5,-1.3)(5,0) 
linecolor=  

[linewidth=1.5pt,linecolor=]-> (-0.8,0.5)(0.8,1.5)
[linewidth=1.5pt,linecolor=]-> (-0.8,-0.5)(0.8,-1.5)

(1.5,2)linecolor= (0,1.3)(5,1.3)(0,-1.3)(5,-1.3)(5,0) linecolor= *(1.175,-1.3)0.1 *(2.725,-1.3)0.1 *(4.275,-1.3)0.1  

(1.5,-2)linecolor= (0,1.3)(5,1.3)(0,-1.3)(5,-1.3)(5,0) linecolor= *(1.95,1.3)0.1 *(3.5,1.3)0.1  
 




(-6.7,-3.6)(6.7,3.6)
 
[linestyle=dashed](0,0)1.3 270 90 (0,0)1.3 90 270   
[hatchsep=1pt,fillstyle=hlines,hatchcolor=](0.7,-0.8)(3.8,-0.8)(4.3,-0.2)(1.2,-0.2) 
[hatchsep=1pt,fillstyle=hlines,hatchcolor=](0.9,-0.8)(3.6,-0.8)(4.1,-0.2)(1.4,-0.2) 

(-6.5,0)linecolor=,linewidth=1pt (0,1.3)(5,1.3)(0,-1.3)(5,-1.3)(5,0) 
linecolor=,linewidth=2pt (0.7,-0.5)(1.2,0.1)(2.25,-0.5)(2.75,0.1)(3.8,-0.5)(4.3,0.1) 

[linewidth=1.5pt,linecolor=]-> (-0.8,0.5)(0.8,1.5)
[linewidth=1.5pt,linecolor=]-> (-0.8,-0.5)(0.8,-1.5)

(1.5,2)linecolor=,linewidth=1pt (0,1.3)(5,1.3)(0,-1.3)(5,-1.3)(5,0) linecolor=  
(1.5,-2)linecolor=,linewidth=1pt (0,1.3)(5,1.3)(0,-1.3)(5,-1.3)(5,0) linecolor= (0,1)  


 





(-6,-3)(6,3)

[linecolor=](-5,-2.5)(-5,2.5)(5,2.5)(5,-2.5)

linecolor=,hatchcolor= 
*(5,2.5)0.1  
*(-5,2.5)0.1 
*(0,-2.5)0.1 

[hatchsep=2pt,fillstyle=hlines](-4,0.5)(3.3,0.5)(4,1.5)(-3.3,1.5)

[linewidth=2pt](-2.2,-1.5)(-1.5,-0.5) 
[linewidth=2pt](1.5,-1.5)(2.2,-0.5)   


linecolor= 
-> (-1.8,-1.1)(-0.2,-2.3) 
-> (1.6,-1.2)(0.2,-2.3)   
-> (0,0.3)(0,-2.1)        
(0,1.7)(0,1.9)                                       
[linearc=0.3]-> (0,1.9)(0,2.2)(-4.5,2.2)(-4.7,2.35) 
[linearc=0.3]-> (0,1.9)(0,2.2)(4.5,2.2)(4.7,2.35)   
[linearc=0.5]-> (-2.0,-0.95)(-4.3,0.2)(-4.8,2.25)
[linearc=0.5]-> (2.0,-0.95)(4.3,0.2)(4.8,2.25) 

(0.6,1.85) 
(-1.5,-1.85) 
(3.5,-0.6) 
(0.6,0) 
(1.25,-2) 
(-3.5,-0.6) 

linewidth=2pt,linestyle=dotted 
-> (-3.8,1.0)(-4.6,2.1)   
-> (4,1.5)(4.6,2.1)     

(-3.85,1.8) 
(3.7,1.85) 


(-5,2.8) 
(5,2.8) 
(0,-2.8) 
(-1.2,-0.3) 
(2.3,-0.3) 
(-2,1)*  
 





(-6,-2)(6,2)
(-4.5,0)
[linecolor=,linewidth=1pt](0,0)1.5 

linecolor=,linewidth=2pt 
dotsize=5pt 0 
(1.5,0)(-0.75,1.299038106)(-0.75,-1.299038106)(0,0)
(1.75,0) 
(-1,1.5) 
(-1,-1.5) 
(-0.6,0)'free' 
 

(0,0)
[linecolor=,linewidth=1pt](0,0)1.5 

linecolor=,linewidth=1.5pt 
(1.5,0)(-0.75,1.299038106)(-0.75,-1.299038106)
(.65,.9) 
(-1.1,0) 
(.6,-.85) 
 

(4.5,0)
[linecolor=,linewidth=1pt](0,0)1.5 

linecolor=,linewidth=1pt,hatchcolor= 
[fillstyle=hlines,hatchsep=4pt](0,0)1.05 
(0,-0.5)*'new'  

 
 




(-0.5,-0.5)(0.5,0.5)

[linecolor=,linewidth=0.5pt](0,0)1 
dotsize=5pt 0 
linecolor=,linewidth=1.5pt  
(1,0)(-0.5,.866025404)
 
  

(-0.5,-0.5)(0.5,0.5)

[linecolor=,linewidth=0.5pt](0,0)1 
dotsize=5pt 0 
linecolor=,linewidth=1.5pt  
(1,0)(-0.5,.866025404)
 
  

(-0.5,-0.5)(0.5,0.5)

[linecolor=,linewidth=0.5pt](0,0)1 
dotsize=5pt 0 
linecolor=,linewidth=1.5pt  
(1,0)(-0.5,.866025404)(-0.5,-.866025404)
 
  

(-0.5,-0.5)(0.5,0.5)

[linecolor=,linewidth=0.5pt](0,0)1 
dotsize=5pt 0 
linecolor=,linewidth=1.5pt  
(1,0)(-0.5,-.866025404)
(-0.5,.866025404)
 
  

(-0.5,-0.5)(0.5,0.5)

[linecolor=,linewidth=0.5pt](0,0)1 
dotsize=5pt 0 
linecolor=,linewidth=1.5pt  
(-0.1,0)(0.1,0)
 
  

(-0.5,-0.5)(0.5,0.5)

[linecolor=,linewidth=0.5pt](0,0)1 
dotsize=5pt 0 
linecolor=,linewidth=1.5pt  
(0,0)
 
  

(-0.5,-0.5)(0.5,0.5)

[linecolor=,linewidth=0.5pt](0,0)1 
dotsize=5pt 0 
linecolor=,linewidth=1.5pt  
[fillstyle=hlines,hatchsep=4pt,hatchcolor=,linewidth=0.5pt](0,0)0.7 
 
  

(-0.5,-0.5)(0.5,0.5)

[linecolor=,linewidth=0.5pt](0,0)1 
dotsize=5pt 0 
linecolor=,linewidth=1.5pt  
(0.06,0)[fillstyle=hlines,hatchsep=4pt,hatchcolor=,linewidth=0.5pt](0,0)0.7  
(-0.06,0)[fillstyle=hlines,hatchsep=4pt,hatchcolor=,linewidth=0.5pt](0,0)0.7  
 
  

(-0.5,-0.5)(0.5,0.5)

[linecolor=,linewidth=0.5pt](0,0)1 
dotsize=5pt 0 
linecolor=,linewidth=1.5pt  
(.995,0.1)(.995,-0.1)
 
  

(-0.5,-0.5)(0.5,0.5)

[linecolor=,linewidth=0.5pt](0,0)1 
dotsize=5pt 0 
linecolor=,linewidth=1.5pt  
(1,0)
 
  

(-0.5,-0.5)(0.5,0.5)

[linecolor=,linewidth=0.5pt](0,0)1 
dotsize=5pt 0 
linecolor=,linewidth=1.5pt  
(-0.5,.866025404)
 
  

(-0.5,-0.5)(0.5,0.5)

[linecolor=,linewidth=0.5pt](0,0)1 
dotsize=5pt 0 
linecolor=,linewidth=1.5pt  
(0,0)
[fillstyle=hlines,hatchsep=4pt,hatchcolor=,linewidth=0.5pt](0,0)0.7 
 
  

(-0.5,-0.5)(0.5,0.5)

[linecolor=,linewidth=0.5pt](0,0)1 
dotsize=5pt 0 
linecolor=,linewidth=1.5pt  
(1,0)(-0.5,.866025404)(-0.5,-.866025404)
 
  

(-0.5,-0.5)(0.5,0.5)

[linecolor=,linewidth=0.5pt](0,0)1 
dotsize=5pt 0 
linecolor=,linewidth=1.5pt  
(1,0)
(-0.5,.866025404)(-0.5,-.866025404)
 
  

(-0.5,-0.5)(0.5,0.5)

[linecolor=,linewidth=0.5pt](0,0)1 
dotsize=5pt 0 
linecolor=,linewidth=1.5pt  
(-0.5,.866025404)(1,0)(-0.5,-.866025404)
 
  

(-0.5,-0.5)(0.5,0.5)

[linecolor=,linewidth=0.5pt](0,0)1 
dotsize=5pt 0 
linecolor=,linewidth=1.5pt  
(-0.5,.866025404)(1,0)(-0.5,-.866025404)(-0.5,.866025404)
 
  





(-6.5,-8,5)(6.5,4)

(1,-7.5) 
(1,-5.5) 
(-1,-4.5) 
(1,-3) 

(1,-1) 
(-1,0) 
(-3,1) 
(1,2) 
(-1,3) 






linewidth=1pt,linecolor= 
-> (1,-6.1)(1,-6.9)
-> (1,-3.6)(1,-4.9)


-> (-1,-0.6)(-1,-3.9)








-> (1,-1.6)(1,-2.4)


-> (-2.463343686,.7316718428)(-1.536656314,.2683281572)
-> (-2.794954162,.4361239459)(-1.205045838,-3.936123946)
-> (-.4633436855,-4.768328157)(.4633436855,-5.231671843)
-> (-.6671798822,-4.999230177)(.6671798822,-7.000769823)



-> (-.4633436855,-.2683281572)(.4633436855,-.7316718428)
-> (-.7949541621,-.5638760541)(.7949541621,-4.936123946)
-> (-1.,2.4)(-1.,.6)
-> (1.,1.4)(1.,-.4)

(-.3,-6) 
(0,-4.65) 
(.8,-6.4) 

(.8,-4.15) 
(.8,-1.9) 

(-2.2,-1.7) 
(-.8,-2.2) 
(-.8,1.5) 
(-2.1,.25) 
(-.1,-.75) 
(.1,-2.3) 
(1.2,.5) 







 
 



(-6,-2.5)(6,2.5)
(-3.5,0)
[linecolor=,linewidth=1pt](0,0)2 
dotsize=5pt 0 
(0,2)(1.902113032,.618033989)(1.175570504,-1.618033989)(-1.175570504,-1.618033989)(-1.902113032,.618033989)

linecolor=,linewidth=2pt 
(-1.902113032,.618033989)(0,2)(1.902113032,.618033989)(1.175570504,-1.618033989)
-> (-1.902113032,.618033989)(-.6340376773,1.539344663)
-> (0,2)(1.268075355,1.078689326)
-> (1.902113032,.618033989)(1.417751347,-.8726779963) 

(3.5,0)
[linecolor=,linewidth=1pt](0,0)2 
dotsize=5pt 0 
(0,2)(1.902113032,.618033989)(1.175570504,-1.618033989)(-1.175570504,-1.618033989)(-1.902113032,.618033989)

linecolor=,linewidth=2pt 
(-1.902113032,.618033989)(1.175570504,-1.618033989)
-> (-1.902113032,.618033989)(.149675992,-.8726779963)
 
[linewidth=1.5pt,linecolor=]-> (-0.8,0)(0.8,0)
 



(-6,-2.5)(6,2.5)
(-3.5,0)
[linecolor=,linewidth=1pt](0,0)2 
dotsize=5pt 0 
(0,2)(1.902113032,.618033989)(1.175570504,-1.618033989)(-1.175570504,-1.618033989)(-1.902113032,.618033989)

linecolor=,linewidth=2pt 
(0,2)(1.175570504,-1.618033989)
(1.902113032,.618033989)(-1.175570504,-1.618033989)
-> (0,2)(.6465637772,.010081306)
-> (1.902113032,.618033989)(-.1496759920,-.8726779963) 

(3.5,0)
[linecolor=,linewidth=1pt](0,0)2 
dotsize=5pt 0 
(0,2)(1.902113032,.618033989)(1.175570504,-1.618033989)(-1.175570504,-1.618033989)(-1.902113032,.618033989)

linecolor=,linewidth=2pt 
(0,2)(-1.175570504,-1.618033989)
(1.902113032,.618033989)(1.175570504,-1.618033989)
-> (0,2)(-.7837136693,-.4120226593)
-> (1.902113032,.618033989)(1.417751347,-.8726779963)
 
[linewidth=1.5pt,linecolor=]-> (-0.8,0)(0.8,0)
 



(-6,-2.5)(6,2.5)
(-3.5,0)
[linecolor=,linewidth=1pt](0,0)2 
dotsize=5pt 0 
(0,2)(1.902113032,.618033989)(1.175570504,-1.618033989)(-1.175570504,-1.618033989)(-1.902113032,.618033989)

linecolor=,linewidth=2pt 
(0,2)(1.175570504,-1.618033989)
-> (0,2)(.6465637772,.010081306)
(1.902113032,.618033989)(-1.175570504,-1.618033989)
-> (1.902113032,.618033989)(.2093870872,-.6118033989)
(1.175570504,-1.618033989)(-1.902113032,.618033989)
-> (1.175570504,-1.618033989)(-.8762185203,-.1273220037) 

(3.5,0)
[linecolor=,linewidth=1pt](0,0)2 
dotsize=5pt 0 
(0,2)(1.902113032,.618033989)(1.175570504,-1.618033989)(-1.175570504,-1.618033989)(-1.902113032,.618033989)

linecolor=,linewidth=2pt 
(0,2)(-1.902113032,.618033989)
-> (0,2)(-1.268075355,1.078689326)
(1.902113032,.618033989)(-1.175570504,-1.618033989)
-> (1.902113032,.618033989)(-.1496759920,-.8726779963)
 
[linewidth=1.5pt,linecolor=]-> (-0.8,0)(0.8,0)
 



(-6,-2.5)(6,2.5)
(-3.5,0)
[linecolor=,linewidth=1pt](0,0)2 
dotsize=5pt 0 
(0,2)(1.902113032,.618033989)(1.175570504,-1.618033989)(-1.175570504,-1.618033989)(-1.902113032,.618033989)

linecolor=,linewidth=2pt 
(0,2)(1.175570504,-1.618033989)
-> (0,2)(.6465637772,.010081306)
(1.902113032,.618033989)(-1.175570504,-1.618033989)
-> (1.902113032,.618033989)(.2093870872,-.6118033989)
(1.175570504,-1.618033989)(-1.902113032,.618033989)
-> (1.175570504,-1.618033989)(-.5171554412,-.3881966011)
(-1.175570504,-1.618033989)(0,2)
-> (-1.175570504,-1.618033989)(-.3918568347,.79398867)
 

(3.5,0)
[linecolor=,linewidth=1pt](0,0)2 
dotsize=5pt 0 
(0,2)(1.902113032,.618033989)(1.175570504,-1.618033989)(-1.175570504,-1.618033989)(-1.902113032,.618033989)

linecolor=,linewidth=2pt 
(1.902113032,.618033989)(-1.902113032,.618033989)
-> (1.902113032,.618033989)(-.6340376773,.618033989)
 
[linewidth=1.5pt,linecolor=]-> (-0.8,0)(0.8,0)
 



(-6,-2.5)(6,2.5)
(-3.5,0)
[linecolor=,linewidth=1pt](0,0)2 
dotsize=5pt 0 
(0,2)(1.902113032,.618033989)(1.175570504,-1.618033989)(-1.175570504,-1.618033989)(-1.902113032,.618033989)

linecolor=,linewidth=2pt 
(-1.902113032,.618033989)(0,2)(1.902113032,.618033989)(1.175570504,-1.618033989)(-1.175570504,-1.618033989)
-> (-1.902113032,.618033989)(-.6340376773,1.539344663)
-> (0,2)(1.268075355,1.078689326)
-> (1.902113032,.618033989)(1.417751347,-.8726779963)
-> (1.175570504,-1.618033989)(-.3918568347,-1.618033989) 

(3.5,0)
[linecolor=,linewidth=1pt](0,0)2 
dotsize=5pt 0 
(0,2)(1.902113032,.618033989)(1.175570504,-1.618033989)(-1.175570504,-1.618033989)(-1.902113032,.618033989)

linecolor=,linewidth=2pt 
(-1.902113032,.618033989)(-1.175570504,-1.618033989)
-> (-1.902113032,.618033989)(-1.417751347,-.8726779963)
 
[linewidth=1.5pt,linecolor=]-> (-0.8,0)(0.8,0)
 
               15cm
 +.7cm
  +.7cm
20cm
16pt 






) 

lem) Lemma) 
prop) Proposition) 
  
 
 
  
  
  


d)  
n 
G^  
g ^  
H^  
h ^ 
B   
P_k^+  
P^+  
^_k  
^  
_k^  
^  
Hom    
End    
Mat    
Rep   
T   
R   
K   
id  
z  
J  
 
 
T  
Ad  
ad  
T   
C    
rank  
H   
J   
E   
n   
A    
L    
S   
F    
f        
CS   
 ,    
   
B  
C  
A     


Organizing boundary RG flows 

Stefan Fredenhagen  

                
     
                  CPHT - Ecole Polytechnique

                  F-91128 Palaiseau CEDEX, France 
January 28, 2003 
       
 

We show how a large class of boundary RG flows in 
two-dimensional conformal field theories can be summarized in a single rule.
This rule is a generalization of the 
'absorption of the boundary spin'-principle of Affleck and Ludwig and 
applies to all theories which have a description as a coset model. 
We give a formulation for coset models with arbitrary modular 
invariant partition function and present evidence for the conjectured rule.
The second half of the
article contains an illustrated section of examples where the
rule is applied to unitary minimal models of the A- and D-series, in
particular the 3-state Potts model, and to parafermion theories. We
demonstrate how the rule can be used to compute brane charge groups in
the example of  minimal models.

CPHT-RR-006-0103  hep-th/0301229  
e-mail: stefan@cpht.polytechnique.fr  

Introduction 
The study of renormalization group (RG) flows in two-dimensional quantum
field theories is an important subject in condensed matter
physics and statistical mechanics, and it also plays a vital role in
string theory. In systems with boundaries or
defects, there are flows generated by boundary fields 
which only affect the boundary condition and leave the theory in the
bulk unchanged. In string theory, such flows describe the dynamics of
D-branes in a given closed string background. 

How do we find boundary RG flows? For a given boundary perturbation of
a boundary conformal field theory (BCFT), we have various tools at our
disposal. In some cases when we perturb by a field which is 
only 'slightly' relevant, we can apply
perturbation theory . If the perturbation is
integrable, we may use exact integral equation techniques (like the
Thermodynamic Bethe Ansatz). A method which can always be
employed is the Truncated Conformal Space Approach where we
truncate the Hilbert space to a finite-dimensional space and compute
RG flows numerically.

All these tools have helped to get a substantial knowledge about
boundary RG flows. To organize the informations, we need general,
model-independent principles. One such principle is the 'g-conjecture'
of Affleck and Ludwig  which states that the
boundary entropy  always decreases along a RG flow. Although very
important, the 'g-conjecture' is not a constructive principle: it only
tells us which flows are possible  and which are not. 

In the case of WZNW models, we have a constructive principle at
hand, namely the 'absorption of the boundary spin'-principle of
Affleck and Ludwig . This rule is easy to formulate and
describes a large class of flows. 

A generalization of this rule to fixed-point free coset models was proposed
in . The formulation there was for coset
models with a charge-conjugated modular invariant partition function
and boundary conditions of Cardy type. Here, we shall present a
formulation that is applicable for all maximally symmetric boundary
conditions in coset models with any modular invariant. Furthermore we
shall work out some arguments supporting the proposal, and employ the
rule in a number of examples.

The structure of the paper is as follows: We start with an introduction
to coset models and their maximally symmetric boundary conditions 
in section 2. Although this is essentially a review
of , we hope to
clarify the role of the modular invariant when we relate coset
boundary conditions to those of WZNW models. In section 3, we
formulate the 'absorption of boundary spin'-principle and its
generalization to coset models and discuss the relation to
perturbative calculations and the compatibility with the g-conjecture.
Through a number of examples, we present the rule at work in section 4. We
shall make extensive use of 
a geometric interpretation of the boundary conditions as
'branes' to visualize the RG flows. Whenever we are aware of results on
boundary RG flows in the specific examples, we compare them to the
predictions of the rule. At the end of section 4 the rule is used to
determine the charge group of branes in  minimal models. 
In the appendix we collect the complete
results for the critical and tricritical Ising model as
well as the 3-state Potts model.

Boundary Conditions in coset models 
The coset construction  allows to access a great 
variety of rational conformal field theories. 
Boundary conditions in these models have been investigated in the
past. Most of the work was concentrated on maximally symmetric 
boundary conditions, i.e. those
where the boundary conformal field theory admits the action of the
coset chiral algebra . Untwisted boundary
conditions in coset models with charge-conjugated modular invariant
partition function are already covered by the seminal paper of Cardy on
boundary conditions in rational CFTs . The
generalization to twisted boundary conditions and more general modular
invariants has been worked out
in . Symmetry breaking boundary
conditions in coset models have been first considered
in  relying on previous work in WZNW 
models . In the -model approach,
boundary conditions in gauged WZNW-models have been studied
in . Recently there
has been also some work on boundary conditions in asymmetric cosets .
We give a short introduction to coset models to set up our
notation. Subsequently, we discuss some general properties of maximally
symmetric boundary conditions. The section ends with a review on 
the construction
of boundary states from known boundary conditions in the product
theory with chiral algebra .

Coset construction 
From now on let  denote some simple 
subalgebra of the simple Lie algebra  (the generalization to
semi-simple Lie algebras is straightforward). We want to study the associated 
 coset model. A more precise formulation of this theory 
requires a bit of preparation (more details can be found e.g. 
in). 

Induced from the embedding of  in , there is an embedding of
the affine Lie algebra  into . The level
 is related to  by the embedding index , .
We shall label the sectors  
of the affine Lie algebra  with labels 
. Note that the sectors of the numerator theory 
carry an action of the denominator algebra 
 and under this action each sector  
decomposes according to 
 
Here we have introduced the infinite dimensional spaces 
 which we want to interpret as 
sectors of the coset chiral algebra. The latter is usually 
hard to describe explicitly, but at least it is known to 
contain a Virasoro field with modes
 
One may easily check that they obey the usual exchange 
relations of the Virasoro algebra with central charge given 
by . 
Note that some of the spaces  may be trivial 
simply because a given sector  of the 
denominator theory may not appear as a subsector in a 
given . This allows to introduce the set





Furthermore, some of the coset spaces labeled by
different pairs  and  correspond to
the same sector of the coset theory. Therefore we label coset
sectors by equivalence classes  of pairs.

There is an elegant formalism to describe these selection and
identification rules which is
applicable in almost all coset models(The known exceptions
all appear at low levels of the involved affine Lie algebras, see e.g.
the Maverick cosets ) . It involves the so-called
identification group  which contains pairs 
 of simple currents. It is a subgroup of the direct
product of the simple current groups of  and
. A simple current  
of  is an element in  which has the
property that the fusion product of 
with any other representation  contains exactly one sector 
,



To formulate the selection rules in coset models, we introduce
the monodromy charge  of  with respect to 
in terms of conformal weights,



The monodromy charge appears when a simple current  acts on
the modular S-matrix, 




We are now prepared to formulate selection and identification rules in
terms of the identification group  of simple currents:
 
A pair  is allowed, i.e. , if
 for all 

Two pairs  and  
label the same sector, i.e. 



At this point we want to make one assumption, 
namely that all the equivalence classes we find in  
contain the same number  of elements, in other
words,  acts fixed-point free. 
This holds true for many 
important examples and it guarantees that the sectors of the 
coset theory are simply labeled by the equivalence classes(For more 
general cases, there are 
further sectors that cannot be constructed within the sectors 
of the numerator theory.) , 
i.e. . It is then 
also easy to spell out explicit formulas for the fusion rules and the S-matrix 
of the coset model. These are given by
  
where the bar over the second S-matrix denotes complex 
conjugation. 

Maximally symmetric boundary conditions 
Let us turn now to coset models with a boundary and summarize
some general properties of maximally symmetric boundary conditions 
to be prepared for the concrete analysis in section 2.3. 

We want to impose
conditions along the boundary gluing left moving and right moving
fields together with a suitable automorphism  
of the coset chiral algebra. The corresponding set of elementary
boundary conditions is denoted by .

Because of the specific gluing conditions, the annulus partition
function involving the boundary conditions 
 decomposes into coset characters,




with non-negative integers 
. For a complete set of boundary conditions 
, these numbers
are known to form a representation of the fusion algebra
,





The integers  have the further properties 




and





where  labels the representation conjugate to .

Boundary conditions from WZNW models 
In the last subsection we have been rather general. 
It is possible to relate the analysis of boundary conditions in coset
models to the investigation of boundary conditions in the product
theory with chiral algebra 
. Before we enter
the detailed description, let us sketch our general procedure: 
we specify a modular-invariant partition function of
the coset model and from that we construct a partition function for the
product theory. In the resulting theory we impose gluing conditions involving a
gluing automorphism  where we assume
that  restricts to  and 
. The corresponding boundary
conditions of the product theory can be projected to boundary
conditions in the coset model by certain selection rules.

 

  

   &   &
 
  

Let us become more specific.
We start with a coset model with the partition function





with some non-negative integers .
To this model we associate a product theory 
with partition function (following )





Note the exchange of the -labels  and  which is
necessary to guarantee modular invariance of the product theory.

In this theory we want to analyze maximally symmetric boundary
conditions. To this end, we glue the left- and right-moving currents
 of the  and  theory 
with a gluing automorphism
 indcued from  along
the boundary, 



Assume now that we have solved the problem of finding all maximally symmetric
boundary conditions in the theory, i.e.  we have a set of boundary
conditions 
specified by the boundary couplings 
. The corresponding boundary state is 





Here,  labels an Ishibashi state in the sector
 and  is an additional multiplicity index in the range 






At this point we want to make an important assumption. We assume that
we can find a basis of Ishibashi states s.t. the action of a simple
current on the boundary couplings  is given by a pure phase
factor which only depends on ,






This is certainly true in all examples that we considered, but it is
unclear whether this assumption holds in general (this problem has
already been mentioned in ).

We are now prepared to write down a set of boundary conditions for the
coset model. For any  
satisfying the selection rule
 
we define a boundary condition in the coset model
which we also label by ,
 
The Ishibashi states of the coset model are labeled by equivalence
classes of pairs  together with a multiplicity index 
 running from 1 to 
. 
Note that the multiplicity of the coset Ishibashi state 
and the product Ishibashi state  coincide
so that we can use the same label  on both sides of eq.
cosetbcdef .

It is straightforward to verify that the 
 fulfill the completeness conditions
 
Furthermore, Cardy's condition which says that the annulus coefficients 








are non-negative integers, is satisfied, and 
 

The factorizing case 
In this section we want to deal with the situation of a 'factorizing'
modular invariant partition function in the coset theory. We should
state more clearly what we mean by 'factorizing', namely 
that the associated modular invariant of the product theory is a
 simple current orbifold of a direct product of a
 and a  modular invariant,








where 
.
The boundary conditions 
 in the simple current orbifold can be obtained
from pairs  of boundary conditions  
 
and  of the  and 
theory, respectively. These pairs are subject to identification rules,
and fixed-points can occur (even if  acts fixed-point
free on the sectors). These orbifold fixed-points can be easily 
resolved(In string theory these resolved boundary conditions
are called fractional branes.) . 
We shall label the boundary conditions by
equivalence classes of pairs , always remembering 
the possible orbifold fixed-point resolution.

When we want to obtain boundary conditions in the coset model along
the lines of section 2.3, we only
have to impose in addition the selection rules selrules  
on the boundary conditions . 

We arrive at the final conclusion that - in the factorizing case -
boundary conditions of the coset model are obtained from pairs of
boundary conditions of numerator and denominator theory by suitable
identification and selection rules. This result has been formulated
first in . There, the authors took a direct
way not involving boundary conditions in the simple current orbifold.
In practice this can simplify things: it is not always
necessary to do the fixed-point resolution in the orbifold step,
because it may happen that many of the resolved boundary
conditions do not survive the selection rules. 
Still we think that the detour via the simple current orbifold has
conceptual advantages. Firstly, it shifts all problems with
fixed-point resolution to the orbifold step. Secondly, it fits in the
general framework of section 2.3 which is also applicable in the
non-factorizing case.

In all our examples in section 4, we
shall encounter the factorizing case. The formulation of the 
rule for boundary RG flows in section 3, however, is more general and
can be also used in the non-factorizing case.



RG flows: a simple rule 
Generalized Affleck-Ludwig rule 
To motivate the rule for boundary RG flows in coset models, we shall
first review shortly the original proposal of Affleck and Ludwig for
the absorption of the boundary spin in the Kondo model.

The Kondo model is designed to understand the effect of 
magnetic impurities on the low temperature conductivity
of a conductor. Usually a decreasing temperature will result in an
increasing conductivity, because the scattering with phonons is
reduced (Matthiesen's rule). In some cases,
however, when magnetic impurities are present, the conductivity reaches a
maximum and starts to decrease again. This phenomenon is explained by
the coupling of the electrons to the magnetic impurities. The electrons
tend to screen the impurity, and this coupling increases when
temperatures become low.

Let us say that the conductor has electrons in 
 conduction bands. We can build several currents from 
the basic fermionic fields: the charge current, the flavor current, and the 
spin current . 
The latter gives rise to a  
current algebra. The coordinate  measures the radial 
distance from a spin  impurity at  to which 
the spin current couples(We only consider the case of a
single isolated impurity.) . This coupling is 
 
where  
is a  dimensional irreducible
representation of ,  is the coupling constant.

The operator  acts on the tensor product 
 of the  -dimensional 
quantum mechanical state space of our impurity with the Hilbert 
space  for the unperturbed theory described by a Hamiltonian
. 

When the boundary spin is large (),
the low temperature fixed point 
of the Kondo model appears only at infinite values
of  ('under-screening'). On the other hand, the fixed point 
is reached at a finite value  of 
the renormalized coupling constant  if 
 (exact- or over-screening resp.). In the latter 
case, the fixed points are described by non-trivial
(interacting) conformal field theories. Affleck and 
Ludwig found an
elegant rule to determine these strong-coupling fixed-points. 
The spectrum at the fixed-point is given by
  
Here,  is the unperturbed Hamiltonian, and
the superscript  stands for 'renormalized'.
By  we label a dominant highest-weight representation of
.
 denotes the corresponding module of the 
finite-dimensional Lie algebra , and  is an
irreducible sector of the -theory. 
The formula charpert  is the
content of the 'absorption of boundary spin'-principle by Affleck and
Ludwig .
It is straightforward to generalize these considerations 
to an arbitrary simple Lie algebra . The space  
can be any of the -irreducible subspaces in the 
physical state space  of the theory. Formula charpert  
means that our perturbation with some irreducible representation 
 interpolates continuously between a building block 
 of the partition function of the 
UV-fixed point (i.e. ) and the sum of characters 
on the right hand side of the  previous formula, 
 

In  it was proposed to generalize the
'absorption of boundary spin'-principle to coset models. The suggested
rule is
 
Here,  and  label dominant highest-weight representations of
 and , respectively. The 
coefficients  are the branching
coefficients describing the decomposition of , the corresponding
representation of the finite Lie algebra , into
representations  of ,
 
The embedding of
affine Lie algebras  guarantees that these 
representations can again be identified with 
highest-weight representations  of . 

The flows () 
are generated by fields coming from the coset sectors 
  
Here,  labels the integrable highest-weight 
representation which is built from the 
adjoint representation of the Lie algebra . 
The adjoint representation  of  can be omitted from
the list () if it occurs only once in the decomposition of
.
To see that abscoset  is really a generalization of
abs , we should recover the flows abs  when specializing
to the trivial subgroup  of . The primed label can
then be omitted and the branching coefficient is just the dimension of
the representation space .


Simple rule for boundary RG flows in coset models 

From the stated rule abscoset  formulated in terms of 
characters we can infer
a rule for a flow between superpositions of boundary conditions. Before 
we discuss how this is done, let us present the result.

Choose a representation  and a boundary
condition 
 s.t. 




Then there will be a RG flow between the following coset boundary 
configurations  and ,
 
Here, we introduced the shorthand notation  to define a
superposition of the form




The label  has to be understood as





where  denote the finite branching coefficients defined
in repdecomposition .
The flows bcflow   
are generated by fields from the coset sectors list .  
To derive bcflow  from abscoset , we introduce an
arbitrary 'spectator'
boundary condition . The annulus partition function
 can be decomposed into combinations of characters
that appear on the left side of abscoset  just using the fact
that the annulus coefficients form a representation of the fusion
algebra. 
The expression that
we obtain from applying abscoset  can then be rewritten as
, i.e. we find the result



for arbitrary boundary conditions .


In the remainder of this section we want to give two arguments to
support our claim. First, we want to relate the rule to results
from a perturbative analysis in the limit when some levels are
large. Then we shall present evidence
that the rule is compatible with the g-conjecture of Affleck and
Ludwig.
For a general coset theory with semi-simple numerator and denominator
there occur different levels  for the simple constituents of
the numerator which then determine the levels in the denominator. 
Assume that we take some of the levels to very large values
of the order of a common scale . In the limit ,
there are many coset fields whose conformal weight approaches 
(the difference to 1 being of the order ). The RG flows induced
by such fields can be studied by perturbative techniques. One
way is to use the method of effective actions. Here, the couplings of
the boundary fields are combined into matrices  which are
interpreted as fields in an effective theory determined by an action
. The equations of motion for  are precisely the
fixed-point equations . 
In the effective action
for untwisted boundary conditions in coset models has been constructed to
leading order in  building upon earlier works in 
WZNW models . The generalization to twisted
boundary conditions has been
worked out
in  using results of . 

A special class of solutions for all, untwisted and twisted, boundary
conditions  has precisely the form bcflow ,




but here we have to restrict  to representations s.t. the
conformal weight  in the -theory is of
order . The rule bcflow  thus extrapolates the
perturbative results to arbitrary values of the levels.
The g-conjecture of Affleck and Ludwig states that the boundary
entropy  decreases along a boundary RG flow ,



The boundary entropy  for a superposition 
 (with ) of boundary
conditions  occurring with multiplicity  is defined as
the sum of the g-factors of the single boundary conditions,




The ratio  for the conjectured flow bcflow  is
given by
* 
We simplify this expression by using the fact that the vector 
 is an eigenvector of the matrix 
 with eigenvalue  and obtain a result
which does only depend on ,





Hence, if our conjectured rule bcflow  and the g-conjecture 
are correct, we obtain the following inequality for quantum
dimensions of  and  (),
 
This inequality can be used to test our proposal.

For diagonal cosets 
 the inequality is satisfied. This follows
from the fact that the quantum dimension
 of a fixed
representation  is a monotonically increasing function of the level .
Unfortunately, for general coset models 
we have not found a proof yet. However, numerical checks have been performed in
a large number of coset models, all in accordance with the conjecture. 
Furthermore, when we take some levels to be large, we can confirm the 
inequality in a perturbative calculation (see appendix A). 
This ends our discussion of the general properties of the rule bcflow .  
We have given some evidence by showing that the rule is consistent
with the perturbative results and, although not completely proven,
with the g-conjecture. The next section will provide more evidence
coming from specific examples where the rule is able to reproduce
a number of known flows.

Examples 
In this section we shall present the rule bcflow  at work in a
number of examples. In all these examples we shall first give the
field content of the theory (coset sectors) and the boundary
conditions by specifying identification and selection rules. Then we
shall formulate the annulus coefficients for the coset boundary
theories. The boundary conditions for the associated product theory
are obtained by forgetting the selection rules on them, and the
corresponding annulus coefficients are related to the ones from the coset
model by anncoeff .
We shall introduce a pictorial
representation of the boundary conditions as branes in some target
space. This is followed by an application of the rule bcflow 
to identify flows which are visualized as 'brane processes'.
For some models we collected the complete results in appendix B.

Minimal Models, A series 
The unitary minimal models can be constructed as diagonal cosets of
the form 
 with an integer . The modular invariant partition
functions for these models are completely
classified  (see
also); in this
subsection we shall deal with the A series which is sometimes
denoted as .

The sectors of the theory are labeled by three integers
 in the range 
. Selection rules force the sum  to be even, and
there is an identification 
 between admissible labels(The
relation to the usual Kac labels  is  and .) . 
The adjoint field from the sector  that induces the flow
described by the rule bcflow  has conformal weight 
. 

In the A-series we are in the Cardy case, i.e. the boundary
conditions  are labeled by 
triples 
taking values in the same range as the sectors 
including selection and identification rules.

The annulus coefficients are just given by the fusion rules 
and  of
 and  resp.,







We now want to give a pictorial
representation of the boundary conditions. Coset models can also be
formulated as non-linear -models on a background geometry
which is essentially given by the space  where we divide
the group  by the adjoint action of the subgroup
. The boundary conditions can then be described by certain
subspaces ('branes') onto which the boundary of our two-dimensional
world-sheet is mapped . One
should be aware that this geometrical interpretation is only valid for
large values of the level. If one, however, views the pictures just as a
nice tool to illustrate the boundary conditions, we can profitably 
employ them for arbitrary levels.

In the case of minimal models 
we describe the background as a solid cylinder with
squeezed ends . The boundary conditions are
represented by branes, extended objects of dimension 0,1 and 2. Let
 be the coordinate along the axis of the cylinder,  the
coordinate along the squeezed ends and  a third coordinate
perpendicular to the others (see fig.
). All branes  
are located along surfaces of constant  and are maximally extended in the
-direction. In  they stretch between two values  and
. The boundary conditions with  are
represented as points at the top or bottom of the cylinder, the ones
with  are one-dimensional objects stretching in -direction
(see fig. ).
We shall give explicit formulas for 
. The coordinate  lies in the range , and the
coordinate  takes values in ,









 
 

 The geometrical
representation of boundary conditions in the minimal model A-series.  

The rule bcflow  describes a large number of flows for many
different starting configurations. We shall concentrate here on two
types of starting points: a single boundary condition and a
superposition of boundary conditions of the form 
.

Assume that we want to study flows starting from the boundary condition
 with . To apply our
rule bcflow , we have
to find a boundary condition  and a 'boundary spin'  s.t. 


 
On the one hand we can set  and 
. This corresponds to the flow
 
On the other hand, the choice  and 
 leads to the flow
 
The number of elementary boundary conditions appearing on the r.h.s.
of mmAflowI  and mmAflowII  can be different depending
on the values of . Assume that  which we can
always achieve by using the identification rules. For  we
find a superposition of  boundary conditions 
in both flows mmAflowI  and mmAflowII . These flows are
illustrated in fig. . For 
 there are  boundary conditions on the r.h.s. of
mmAflowI , but in mmAflowII  we find a superposition of 
 boundary conditions (see fig. ).
 
 
 
A pictorial representation of
the flows mmAflowI  and mmAflowII  for
: a single brane can
flow to a superposition of point-like branes.  
 
 
 
A pictorial representation of
the flows mmAflowI  and mmAflowII  for
: a single brane can
flow to a superposition of point-like branes. 

The first of the flows, mmAflowI , 
has been analyzed in perturbation theory for
large  in , the second one,
mmAflowII , cannot be seen in
this limit. Nevertheless, both flows are known to
exist . They are generated
by the  field (in Kac labels ) and differ by the sign
of the perturbation. This is in agreement with our general
statements list  on the boundary fields generating the flow.
Now let us choose a superposition of boundary conditions with a
trivial first label. We set   and 
 in bcflow  and obtain
 
On the other hand, we could choose  and
 which leads to
 
The two flows are illustrated in fig. . 
 
 
 
Pictorial representation of
the flows mmAflowIII  and mmAflowIV : a superposition of
string-like branes can flow to a single brane. 
Again, perturbation theory for large  can only see the first of
these flows . 


Critical Ising model 
The simplest model in the unitary minimal A-series is the critical Ising
model with . There are three boundary conditions, the free one
and two with fixed spin (up or down) at the boundary. Our geometrical
picture reduces to a cushion-like background where the fixed boundary
conditions are point-like objects at the top and bottom whereas the
free boundary condition is a string-like object sitting precisely in
the middle of the cushion (see fig. ). 
 
 

Ising model: flows from the free
boundary condition to spin up or spin down. 

Starting from the free condition, the system can be driven into a
theory with fixed spin. These are precisely the two
flows mmAflowI , mmAflowII . They are depicted in 
fig. . Flows starting from a superposition of boundary
conditions can be found in appendix B.

Tricritical Ising model 
The second model in the unitary minimal series is the tricritical
Ising model with central charge . Once more, the
flows triggered by the -field as analyzed in  
are correctly reproduced by mmAflowI  and
mmAflowII . There are, however, more flows known which
correspond to a perturbation with other
fields . As the rule depends on the specific
coset construction, it is possible to find additional flows by
choosing different coset realizations of the same theory. 
For the tricritical 
Ising model, such alternative realizations do exist. One is 
given by . 
When we apply our rule to this coset construction, it reproduces the two
known flows caused by the -field. In Kac labels they read 



and they are depicted together with the other flows in
fig. .  
 
 
Boundary RG flows in the
tricritical Ising model induced by the -field ()
and the -field (). 
These two flows also appear in higher minimal models 
where we do not know a coset realization for the
-perturbations. 
This may be related to the observation that the tricritical Ising model 
seems to be the only theory in which the considered perturbations are 
integrable. Nevertheless, recovering flows from
the exceptional  coset construction can be considered as an
important check of the conjectured rule.

There are more realizations of the tricritical Ising model as coset
model , 
but only for one of them our rule predicts flows starting from single
boundary conditions. This is the construction 
as a  coset model. The flows found there
coincide with the -flows mmAflowII , i.e.  with
those flows found in the  construction that cannot be seen
in the perturbative approach. 

In appendix B we collected the complete results, i.e. all flows
described by the rule bcflow  including those that start from a
superposition of boundary conditions, for the  and
the  construction. 

Minimal Models, D-Series 
For the minimal models with , there is in addition to the
diagonal modular invariant (A-type) another modular invariant giving
rise to the D-series of minimal models. Up to some exceptional values
of , these form all possible modular invariants for the minimal models.
Depending on  being even or odd, we distinguish between minimal
models of type  and
, 
and we shall discuss these two classes
of models separately.

(D,A):  even 
Boundary conditions  in the (D,A) models are labeled by triples 
 where  and  lie in the
usual ranges whereas  takes the values 
. The sum
 of 
boundary labels has to be even(When we use  only as a
numerical value and not as a label, 
we forget about the possible signs  from
fixed-point resolution.) . We have the identifications
 where
 
The annulus coefficients can be written as a combination of the
annulus coefficients  for the  model at level  with
D-type partition function and the fusion rules of 
 and ,







Here,  is given by
 
The geometry of the minimal models of the (D,A)-series is the cylinder
of the A-series divided by the reflection at the plane at  (see
fig. ).
 
 
  
The geometry of the (D,A)-minimal model
is the cylinder of the A-minimal model modulo the reflection
(indicated by the arrow) at the
-plane. 
The branes which are symmetric with respect to the reflection split
into two 'fractional branes'.
We are only going to discuss flows starting from a single boundary
condition  with . Because of the
identification rules we are allowed to choose .
We distinguish three cases:
 
:

In bcflow  we choose  and 
and find the flow
 
Alternatively, we choose  and 
 and obtain
 
 
 

The flows mmDAflowI 
and mmDAflowII  illustrated in the half-cylinder geometry of
the (D,A)-minimal models. 
The flows are illustrated in fig. .



As in the previous case, we set  and 
. The rule bcflow  then leads to
 
We find a second flow for  and ,
 
 
 

The flows mmDAflowIII 
and mmDAflowIV  in the (D,A)-minimal model. Some of the branes
appear with multiplicity 2. Note that the
point-like branes sitting on the fixed-plane come in pairs of
fractional branes indicated by  and . 
We have depicted the flows in fig. .

  (analogously for
)

Here we find the flows
 
and
 
One example for the described flows with  can be found in
figure . 
 
 

 The flows mmDAflowV 
and mmDAflowVI  for . In contrast to the flows in
figure  all branes only appear with multiplicity
1. Note that the sign of the fractional brane at the RG end-point
depends on the value of . 

(A,D):  odd 
In the (A,D)-series of the minimal model, we label the boundary
conditions by triples  where , 
, and 
. Selection rules
force the sum  to be even, triples 
and  are identified. Here,  is
defined as in defofhat  with  replaced by .

The annulus coefficients are given by the fusion rules of
 at level  and  and by the annulus
coefficients  of the  model
with D-type modular invariant (see anncoeffD ),






 

The geometry of the (A,D)-minimal models is obtained from the cylinder
geometry of the A-series by dividing out the reflection at the center
(see fig. ). 
A brane which is symmetric under this reflection
splits into two fractional branes.
 
 
  
The (A,D)-minimal model is described by
the cylinder geometry of the A-series modulo the reflection at the
center (indicated by the arrows). 
As in the (D,A)-case we look for flows starting from a single boundary
condition  with . 
We have to distinguish two cases:
 


When we choose  and 
in bcflow , we find
 
Similarly, for  and  we
obtain
 
 
 
 
The flows mmADflowI 
and mmADflowII  in the (A,D)-minimal model. 
These flows are shown in fig. . 

 

By setting  and  we 
find a flow for a superposition of two boundary conditions,
 
An example for this flow is shown in fig. .
 [!t]
 
  
The flow mmADflowIII  in the
(A,D)-minimal models starting from a superposition of two fractional
branes  and . 

Parafermion series 
The parafermion series can be realized by the cosets 
. The sectors of the theory are labeled by
pairs  where  and  is a -periodic
integer for which we usually choose the range 
. Selection
rules force the sum  to be even, and the pairs  and
 are identified. The fields which appear as
perturbing fields in our rule have conformal weight .

The maximally symmetric branes in parafermion theories come in two
classes: the untwisted branes (A-branes), and the twisted branes
(B-branes). The untwisted branes are the usual Cardy branes and carry
labels  from the same set as the sectors. The annulus
coefficients are given by





where  are the fusion rules of .
In the limit of large levels , the parafermion models can be
described by a non-linear -model on a disc with non-trivial
metric (sometimes this geometry is called 'bell'). We want to use this
picture to visualize boundary conditions as branes. 
The untwisted branes  appear as
point-like objects sitting at  special equidistant points on the
boundary of the circle. The other untwisted branes  are
one-dimensional objects that stretch between these points (see fig.
). These pictures have been introduced
in .
 
 

 A generic untwisted brane 
in the parafermion model and the geometric interpretation of the
labels of the brane. The possible positions of the point-like branes
of type  are also indicated. 
Let us now apply the rule bcflow  to untwisted boundary
conditions. The general result is 




for any label  with  even. An example of a flow with
 is graphically presented in fig. .
 
 
  
Two untwisted branes in the parafermion
model with  flow to a configuration of a  and a  brane. 
Particularly interesting is the case  where the end configuration
consists only of a single boundary condition:




Such a flow is shown in fig. .
 [!t]
 
  
Four point-like branes condense into a
single extended brane. 
In addition to the untwisted (Cardy) boundary conditions 
there are twisted ones which involve a non-trivial automorphism
. In the  part it acts as reflection,



on the numerator  it acts only as an inner automorphism. The
twisted boundary conditions have first been constructed
in .
 
 
  
 A generic twisted brane 
in the parafermion model. For  the brane becomes point-like. If
 is even we find two branes for
 which cover the whole disc. 
 

These boundary conditions are labeled by pairs  where 
is an integer coming from the numerator part, and the sign 
comes from the twisted . Selection rules force  to be even 
in combination with the
sign , and odd if it comes with . As  is 
determined by , we shall often leave it out and write .
Furthermore, there is an identification
between pairs, . For even , the pair
 is a fixed-point of this identification,
and the corresponding boundary condition has to be resolved into two
elementary boundary conditions .

The annulus coefficients (before fixed-point resolution) are given by 




where the coefficients  for the twisted 
 read










The resolution of the fixed-point for  is straightforward.

In our geometric picture
the brane  appears as point-like object in the center of the
disc, and the branes  are 
two-dimensional discs placed at the
origin (see fig. )(Note that from 
the point of view of
closed strings as derived in, 
the smallest  twisted brane is not point-like, but has a small, non-zero
radius. We do not want to discuss these differences any further, as
the only purpose of the geometrical pictures here is to visualize the
boundary conditions and the boundary RG flows.) .

The rule bcflow  applied to the twisted parafermion branes 
(ignoring again the fixed-point resolution) describes a flow from a
superposition of  identical boundary conditions  to
some other configuration, 




An example for  is shown in fig. .
 
 
 
Two of the smallest twisted branes condense
into a larger disc. 

There is a different realization of the parafermion series, namely 
as diagonal coset models 
. Here, the adjoint field which induces
the flows has conformal
weight . In this realization, we can even find flows
starting from single boundary conditions, e.g. a one-dimensional
brane at the boundary of the disc flows to a point-like one. We leave
it at these general words here, but we shall
work out the flows for  in section 4.6.

3-state Potts model 
The 3-state Potts model is a square lattice model where at each site
 there is an angular variable  
taking values . The interaction is given by the
classical Hamiltonian




the sum running over nearest neighbor pairs. When the model is at its
critical coupling, it can be described by a conformal field
theory. Introducing a boundary into the problem, one can show that
there are 8 possible boundary
conditions . These are the free
boundary condition, the three different fixed boundary conditions,
three mixed boundary conditions (one of the three spin states is forbidden
at the boundary) and one additional boundary condition whose
interpretation in the classical Potts model is not as simple as for
the others (see  for details). We use the
nomenclature of  and call the boundary conditions
, , , , , ,  and  (for 'new'), respectively.

The CFT describing the critical 3-state Potts model is a minimal model
of central charge . It can be obtained by various coset
constructions: it belongs e.g. to the minimal D-series for  and
to the parafermion series also for . 
In addition to these two realizations, we shall review the construction
as a diagonal  coset. In all these realizations we determine flows
between boundary conditions using the rule bcflow . In this
section, we shall see the rule in action in examples with twisted 
boundary conditions.
 
 
 
Boundary conditions in the 3-state Potts
model in three different coset constructions. 
The g-factors are given in
terms of  and . 
We start with the construction as a 



coset that we already encountered in the discussion of parafermion
theories in section 4.5. The untwisted branes are labeled by pairs
 where the labels  and  lie in the range  and
. Selection rules force the sum  to be even, and
the pairs  and  label the same brane. These are
the usual Cardy branes, and there are six of them in the model. 
We adopt the geometric interpretation from
section 4.5. 
In this interpretation, three
branes are points on the boundary of the disc and correspond to the
three fixed boundary conditions . The other three describe
mixed boundary conditions  and are represented as lines (see
fig. ).

The remaining two boundary conditions can be constructed as twisted
branes. 
They are labeled by pairs  where 
is an integer coming from the numerator part, and the sign 
comes from the twisted 
. Selection and identification rules leave us with the two
boundary conditions  and .
In our geometric picture
the brane  appears as point-like object in the center of the
disc, and the brane  is a two-dimensional disc placed at the
origin (see fig. ). 
 
 
 
Pictorial representation of boundary
conditions in the 3-state Potts model. 
They are the 'free' and the 'new' boundary condition, respectively.
Table  gives an overview of boundary conditions in this
particular model.
Now, we want to apply our rule bcflow  to determine RG flows.
We first observe that the rule does not describe flows starting from a
single boundary condition. Instead, we shall analyze all possible
flows for superpositions of two boundary conditions. In all these
cases the boundary spin triggering the flow is .

We start with untwisted branes. Applying the rule bcflow  for
, we find the flow
* 
As one could already infer from symmetry arguments, there are also
the flows  and 
. Starting instead with  we find
* 
analogous results can be obtained for permutations of the letters .
 
Choosing  in bcflow  yields the flow
* 
If we set , the resulting flow is
* 
These are all flows provided by the rule bcflow  for
superpositions of two boundary conditions. The field responsible for
the flows comes from the coset sectors  and has
conformal weight . This can be concluded from
our general prescription in section 3 (see eq. list ).


We now turn to the description of the Potts model as diagonal  coset,



where the modular invariant is obtained from charge-conjugated modular
invariants in the numerator, the denominator  contributes
a  modular invariant. 
The perturbing field comes from the adjoint sector  and has
conformal weight .

We find four
boundary conditions  in the  part and two boundary
conditions  in the  part. The  part has
a  modular invariant. There are
four boundary conditions which we label by . The
coefficients of the corresponding boundary states in terms of
Ishibashi states can be found e.g. in.

Identification and selection rules leave us with eight boundary
conditions for the 3-state Potts model. They are given in
table .
Applying our rule, we observe first that we find the same flows
involving superpositions of two boundary conditions that we discussed
in the parafermion construction. In addition we find flows relating
'free' and 'new' boundary conditions with the others, namely (for
superpositions of maximally three boundary conditions):
* 


Let us finally discuss the construction of the Potts model as



coset. Its sectors are labeled by three  weights 



where  are non-negative integers (Dynkin labels)
obeying
* 
0l_1 +l_2 1,0m_1 +m_2 1,
0l'_1 +l'_2 2

2 (l_1 +m_1 -l'_1 )+l_2 +m_2 -l'_2  = 0 3   .
The sectors are identified according to the field identification
* 
[(l_1 ,l_2 ),(m_1 ,m_2 ),(l'_1 ,l'_2 )] 

 [(1-l_1 -l_2 ,l_1 ),(1-m_1 -m_2 ,m_1 ),(2-l'_1 -l'_2 ,l'_1 )]
 .
What remains are 6 sectors. According to the standard Cardy
construction, these give rise to 6 boundary conditions which are
listed in table  along with their g-factors. Before we go to
construct the remaining two boundary conditions, we want to look for
RG flows.

Let us start with the boundary condition  and exhibit what flows
are 'predicted' by bcflow . We choose the perturbation 
 and find the flow
* 
The spin  leads to
* 
Analogously, we find ,  and , 
. These constitute all flows from single boundary conditions described by
the rule. 
For a superposition of two boundary conditions we find flows
of the form 
* 
The two remaining boundary conditions can be obtained from twisted
gluing conditions using an automorphism which interchanges the two
Dynkin labels of the  theories. In the  there is
only one sector left invariant under this automorphism, in the 
 theory there are two. In total we find two twisted boundary
conditions



there are no selection or identification rules in this example.
We can calculate their g-factors (see table ) and
identify the two boundary conditions as the 'new' and the 'free'
boundary condition, respectively.
 [!t]
 
 
 
Some of the boundary RG flows found in the
3-states Potts model. The vertical ordering of the configurations is done
according to the g-factors. The conformal weight of the field responsible
for a flow is quoted. 
 

Again, we want to investigate what flows are described by the
rule bcflow . Let us start with the 'new' boundary condition and
try the perturbation . This leads to
* 

We can identify the field that drives the described flows. From our
general prescription list , we conclude that the perturbing
field is 
and has conformal weight .


Let us compare our results with the work of Affleck et
al. (see also). 
They find several flows driven by fields of
conformal weight  and . The flows they find are all 
reproduced by our rule. For single boundary conditions we find exact
coincidence, for superpositions our rule suggests further flows that
have not been analyzed in.
Figure  summarizes part of the results for
boundary RG flows in the 3-states Potts model obtained by the
rule bcflow . The complete results can be found in appendix B.

[ Minimal Models] Minimal Models 
As last example we choose the supersymmetric parafermion theories, the
 minimal series. They can be constructed as cosets 
. The sectors of the
theory are labeled by triples
 where(Usually the sectors are labeled
by the triples  where  corresponds to ,  to  and 
corresponds to . We choose a different order here and
put all labels that belong to the numerator theory to the front.)   
 and 
is a -periodic integer with standard range 
. The third label  can take the values . Selection
rules force  to be even and the triples  and
 label the same sectors.

The discussion of boundary conditions is analogous to the parafermion case
(section 4.5). There are untwisted boundary conditions (A-branes), labeled by
triples , and twisted ones
(B-branes) . As many results can be directly
translated from the parafermion case, we are not going to repeat the
whole picture here, but restrict our discussion now
to untwisted, 'even' () boundary conditions. 
 [!t]
 
 
 
 
Some flows in the  minimal model
for . 

Geometrically they can be displayed by straight, oriented lines
(orientation depends on the label )
stretched between  special punctures on a
disc . The smallest
lines connecting two neighboring points have a label .

Let us see what flows are described by the rule bcflow . Let us
choose  s.t.  is even. Then we
find the flow 
 [L_1 ,L_2 ,L'-S][L_1 ,L_2 ,L'-S+2][L_1 ,L_2 ,L'+S]
  
_J N^(k) _SL_1   ^J [J,L_2 ,L']  .
We show some examples for  in
figures  and .
 
 
 
 
Flows supminmodflow  in the
 minimal model for : the first one is obtained by setting
, the second one by setting . 
 
At the end of this section, 
we want to show how these results can be used to determine
the group of brane charges in the  minimal models. We assign
charges  to the boundary conditions 
s.t. they are conserved during
RG flows. From the rule we see immediately that all charges can be
expressed by the charges  
of boundary conditions with  (just
set  to zero in the flow supminmodflow ). 
This means that for the even
untwisted boundary conditions we have at most the charge group 
, one copy of  for every boundary condition with
. Now, the rule implies more constraints on the charges.
It turns out that in the end we remain with the relations
 
 
To find firstrelation , it is sufficient to consider the flows with
 and  in supminmodflow  (see e.g. the first flow
of figure ).
The second relation secondrelation  results from flows 
with  and  (see the second flow of
figure ) combined with firstrelation . 
One can then show that other flows do not give any further constraints.

To summarize we find that the charge group of even untwisted branes is
. This result has already been obtained in .
It coincides with the computation of RR-charges in .

Conclusions 
In this work we presented a proposal for a simple rule for boundary
RG flows in coset models. A specialized version of the rule for
untwisted Cardy boundary conditions had been announced
earlier . Evidence for the rule comes from
three directions. First, the rule is in concordance with perturbative
results. Second, there are strong arguments that 
all flows described by the rule satisfy the general 'g-theorem' of
Affleck and Ludwig. Third, in a number of examples, including
non-trivial exceptional coset constructions, the rule is able to
reproduce flows that have been obtained by different means.

In the last section of the paper, we presented the broad range of
application of the rule in different coset constructions. Having
a rich knowledge of possible boundary RG flows in particular models,
we can start to determine quantities that are invariant under 
RG flows. Interpreting the RG flows as dynamical processes between
brane configurations in string theory, the determination of invariants 
leads to the computation of D-brane charge groups. For WZNW models such
a computation has been performed 
in  using the
rule of Affleck and Ludwig. We showed how the generalized rule can
be used to determine brane charges in  minimal models. The
same method can be applied to other coset models, in particular to
other Kazama-Suzuki models and compared to the RR-charges that have
been calculated in .

Let us mention two open issues that one could consider in the
future. In the perturbative regime we see a lot more flows than are
described by our rule. What happens to them when we take the level to
finite values? Another problem which is almost unexplored concerns
boundary RG flows for non-maximally symmetric boundary
conditions. In the perturbative regime, we have some (though very
limited) informations from non-symmetric solutions of the
effective action found in . It would be
interesting to study these boundary conditions and their relevance for
brane charges further.

.5cm 
Acknowledgements 
I would like to thank
A.  Cappelli, G. D'Appollonio, K. Graham, A. Recknagel, T. Quella,
C. Schweigert and especially V. Schomerus for their comments 
and useful and stimulating discussions.

 
Compatibility with g-conjecture 
In this appendix we want to show that the
inequality inequality  which describes the compatibility of our
proposed rule with the g-conjecture is satisfied when we take 
the levels to be large. For convenience, let us rewrite the inequality
here and introduce the abbreviations  and  for left and
right hand side of the relation,
 
We shall expand both sides of the relation to the order  where
 is the level which is sent to large values. Note that we not
necessarily have to take all levels to be large as long as the
representation  is trivial w.r.t. the algebras that stay at small
levels.
Let us consider the simplest case when  and  are
simple Lie algebras with level  and , respectively. Here,
the integer  denotes the embedding index of the embedding
. When we want to expand the
expressions in app:inequality , we can make use of the
formula 
 
which can be found e.g. in . Here,  is the dual Coxeter number
of ,  is the representation space of
the representation labeled by , and  is the quadratic Casimir,



 are the generators of the Lie algebra . To relate
the Casimir of a -representation with that of a
representation of  we use the formula
 
where the  are 
the generators of  embedded in . 

Now we are prepared to check the inequality app:inequality . 
We expand the l.h.s. according to the formula expansionS  and
obtain




After some manipulations and applying the
relation Casimirrelation  we arrive at





Inserting  and using the fact that 
 as well as  we can
finally conclude that  in the order .
The proof for semi-simple Lie algebras can be done essentially 
along the same lines. Let us sketch the procedure in the example of
a coset model of the form 
 where the level of the
denominator is determined by . Using
the expansion formula expansionS , we reduce our problem to
proving the inequality 
 
The left hand side can be estimated from below as before,
 
We show now that this estimate is good enough to
prove reducedproblem , i.e. that the difference 





is positive. By introducing
 we can rewrite 
in a manifestly positive form,





which completes the proof.

Tables for flows in specific models 
Critical Ising model 
Boundary conditions:  (free),  (spin up),  (spin down).
 
Coset realization  
: Perturbing field has .
 
Flows resulting from bcflow  starting from
 
a single  boundary condition
* 
a superposition of two  boundary conditions
*  

Tricritical Ising model 
Boundary conditions:
 
 
Here, 
.

 
Coset realization  
: Perturbing field has .

Flows resulting from bcflow   starting from
 
a single  boundary condition
* 
a superposition of two  boundary conditions
* 
a superposition of three  boundary conditions
* 
Coset realization  
: Perturbing field has .
 
Flows resulting from bcflow  starting from
 
a single  boundary condition
* 
a superposition of two  boundary conditions
* 
a superposition of four  boundary conditions
*  
a superposition of six  boundary conditions
* 
  
Three-state Potts model 
Boundary conditions:  (see table  on
page ). Note that the model has a -symmetry which
acts on the boundary conditions as 
, the boundary conditions  and  are fixed. We shall only write
out flows modulo this symmetry, e.g. the flow 
 stands also for  and
.

 
Coset realization  
: Perturbing field has .

Flows resulting from bcflow  starting from
 
a single  boundary condition
* 
a superposition of two  boundary conditions
* 
a superposition of three  boundary conditions
* 
a superposition of six  boundary conditions
* 
Coset realization  
: Perturbing field has .
 
Flows resulting from bcflow  starting from
 
a superposition of two  boundary conditions
*  
a superposition of three  boundary conditions
* 
a superposition of four  boundary conditions
* 
Coset realization  
: Perturbing field has .
 
Flows resulting from bcflow  staring from
 
a single  boundary condition
* 
a superposition of two  boundary conditions
* 
a superposition of three  boundary conditions
* 

 10 

I. Affleck, A. W. W. Ludwig, Universal noninteger 'ground state
  degeneracy' in critical quantum systems , Phys. Rev. Lett. 67  (1991)
  161


I. Affleck, A. W. W. Ludwig, The Kondo effect, conformal field theory and
  fusion rules , Nucl. Phys. B352  (1991) 849


S. Fredenhagen, V. Schomerus, On boundary RG-flows in coset conformal
  field theories   (2002), hep-th/0205011


H. Ishikawa, Boundary states in coset conformal field theories , Nucl.
  Phys. B629  (2002) 209, hep-th/0111230


H. Ishikawa, T. Tani, Novel construction of boundary states in coset
  conformal field theories , Nucl. Phys. B649  (2003) 205,
  hep-th/0207177


P. Goddard, A. Kent, D. I. Olive, Virasoro algebras and coset space
  models , Phys. Lett. B152  (1985) 88


J. L. Cardy, Boundary conditions, fusion rules and the Verlinde 
  formula , Nucl. Phys. B324  (1989) 581


T. Quella, On the hierarchy of symmetry breaking D-branes in group
  manifolds , JHEP 12  (2002) 009, hep-th/0209157


T. Quella, V. Schomerus, Asymmetric cosets   (2002), hep-th/0212119


J. Maldacena, G. W. Moore, N. Seiberg, Geometrical interpretation of
  D-branes  in gauged WZW  models , JHEP 07  (2001) 046,
  hep-th/0105038


T. Quella, V. Schomerus, Symmetry breaking boundary states and defect
  lines , JHEP 06  (2002) 028, hep-th/0203161


K. Gawedzki, Boundary WZW, G/H, G/G and CS theories , Annales Henri
  Poincare 3  (2002) 847, hep-th/0108044


S. Elitzur, G. Sarkissian, D-branes on a gauged WZW model , Nucl. Phys.
  B625  (2002) 166, hep-th/0108142


T. Kubota, J. Rasmussen, M. A. Walton, J.-G. Zhou, Maximally symmetric
  D-branes in gauged WZW models , Phys. Lett. B544  (2002) 192,
  hep-th/0112078


M. A. Walton, J.-G. Zhou, D-branes in asymmetrically gauged WZW models and
  axial- vector duality , Nucl. Phys. B648  (2003) 523, hep-th/0205161


G. Sarkissian, On D-branes in the Nappi-Witten and GMM models   (2002),
  hep-th/0211163


P. D. Francesco, P. Mathieu, D. Se ne chal, Conformal Field Theory  ,
  Graduate Texts in Contemporary Physics, Springer, New York (1999)

D. C. Dunbar, K. G. Joshi, Maverick examples of coset conformal field
  theories , Mod. Phys. Lett. A8  (1993) 2803, hep-th/9309093


R. E. Behrend, P. A. Pearce, V. B. Petkova, J.-B. Zuber, On the
  classification of bulk and boundary conformal field theories , Phys. Lett.
  B444  (1998) 163, hep-th/9809097


R. E. Behrend, P. A. Pearce, V. B. Petkova, J.-B. Zuber, Boundary
  conditions in rational conformal field theories , Nucl. Phys. B570 
  (2000) 525, hep-th/9908036


S. Fredenhagen, V. Schomerus, D-branes in coset models , JHEP 02 
  (2002) 005, hep-th/0111189


T. Gannon, M. A. Walton, On the classification of diagonal coset modular
  invariants , Commun. Math. Phys. 173  (1995) 175, hep-th/9407055


I. Affleck, A. W. W. Ludwig, Exact conformal field theory results on the
  multichannel Kondo effect: Single fermion Green's function, selfenergy and
  resistivity  UBCTP-92-029

S. Fredenhagen, V. Schomerus, Brane dynamics in CFT  backgrounds 
  (2001), hep-th/0104043


A. Y. Alekseev, A. Recknagel, V. Schomerus, Brane dynamics in background
  fluxes and non-commutative geometry , JHEP 05  (2000) 010,
  hep-th/0003187


S. Fredenhagen, D-brane dynamics in curved backgrounds , Ph.D. thesis,
  Humboldt University, Berlin (2002),
  (http://edoc.hu-berlin.de/abstract.php3/

  dissertationen/fredenhagen-stefan-2002-09-16)

A. Y. Alekseev, S. Fredenhagen, T. Quella, V. Schomerus, Non-commutative
  gauge theory of twisted D-branes , Nucl. Phys. B646  (2002) 127,
  hep-th/0205123


A. Cappelli, C. Itzykson, J. B. Zuber, Modular invariant partition
  functions in two-dimensions , Nucl. Phys. B280  (1987) 445


A. Cappelli, C. Itzykson, J. B. Zuber, The ADE classification of minimal
  and A1(1) conformal invariant theories , Commun. Math. Phys. 113 
  (1987) 1


A. Kato, Classification of modular invariant partition functions in
  two-dimensions , Mod. Phys. Lett. A2  (1987) 585


A. Recknagel, D. Roggenkamp, V. Schomerus, On relevant boundary
  perturbations of unitary minimal models , Nucl. Phys. B588  (2000)
  552, hep-th/0003110


L. Chim, Boundary S-matrix for the Tricritical Ising Model , Int. J.
  Mod. Phys. A11  (1996) 4491, hep-th/9510008


C.-r. Ahn, C. Rim, Boundary flows in the general coset theories , J.
  Phys. A32  (1999) 2509, hep-th/9805101


F. Lesage, H. Saleur, P. Simonetti, Boundary flows in minimal models ,
  Phys. Lett. B427  (1998) 85, hep-th/9802061


K. Graham, On perturbations of unitary minimal models by boundary
  condition changing operators , JHEP 03  (2002) 028, hep-th/0111205


I. Affleck, Edge Critical Behaviour of the 2-dimensional Tri-critical
  Ising Model , J. Phys. A33  (2000) 6473, cond-mat/0005286


K. Graham, I. Runkel, G. M. T. Watts, Minimal model boundary flows and c =
  1 CFT  , Nucl. Phys. B608  (2001) 527, hep-th/0101187


P. Bowcock, P. Goddard, Virasoro algebras with central charge c  1 ,
  Nucl. Phys. B285  (1987) 651


I. Affleck, M. Oshikawa, H. Saleur, Boundary Critical Phenomena in the
  Three-State Potts Model   (1998), cond-mat/9804117


J. Fuchs, C. Schweigert, Completeness of boundary conditions for the
  critical three- state Potts model , Phys. Lett. B441  (1998) 141,
  hep-th/9806121


I. Affleck, M. Oshikawa, H. Saleur, Quantum Brownian motion on a
  triangular lattice and c = 2 boundary conformal field theory , Nucl. Phys.
  B594  (2001) 535, cond-mat/0009084


W. Lerche, J. Walcher, Boundary rings and N = 2 coset models , Nucl.
  Phys. B625  (2002) 97, hep-th/0011107


S. Fredenhagen, V. Schomerus, Branes on group manifolds, gluon
  condensates, and twisted K-theory  , JHEP 04  (2001) 007,
  hep-th/0012164


P. Bouwknegt, P. Dawson, D. Ridout, D-branes on group manifolds and fusion
  rings , JHEP 12  (2002) 065, hep-th/0210302




 


